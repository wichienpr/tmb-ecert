<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
		http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.tmb</groupId>
	<artifactId>ecert-webapp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>ecert-webapp</name>
	<description>Backend side for ecert-webapp</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- Java Version -->
		<java.version>1.8</java.version>
		<!-- Dependency Version -->
		<commons.lang3.version>3.6</commons.lang3.version>
		<commons.fileupload.version>1.3.3</commons.fileupload.version>
		<commons.io.version>2.5</commons.io.version>
		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
		<hikaricp.version>2.6.3</hikaricp.version>
		<p6spy.version>3.0.0</p6spy.version>
		<swagger.version>2.7.0</swagger.version>
		<!-- Plugin Version -->
		<maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
	</properties>

	<dependencies>

		<!-- Apache Commons -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
<!-- 			<version>${commons.lang3.version}</version> -->
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>

		<!-- Starter for building web, including RESTful, applications using Spring 
			MVC. Uses Tomcat as the default embedded container -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-validator</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Starter for using Tomcat as the embedded servlet container. Default 
			servlet container starter used by spring-boot-starter-web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Starter for using JDBC with the Tomcat JDBC connection pool -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jdbc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.apache.tomcat</groupId>
					<artifactId>tomcat-jdbc</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring data JPA, default tomcat pool, exclude it -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-data-jpa</artifactId> -->
<!-- 			<exclusions> -->
<!-- 				<exclusion> -->
<!-- 					<groupId>org.apache.tomcat</groupId> -->
<!-- 					<artifactId>tomcat-jdbc</artifactId> -->
<!-- 				</exclusion> -->
<!-- 			</exclusions> -->
<!-- 		</dependency> -->

		<!-- Starter for building MVC web applications using Thymeleaf views -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>nz.net.ultraq.thymeleaf</groupId>
					<artifactId>thymeleaf-layout-dialect</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Starter for using Spring Security -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.boot</groupId> -->
<!-- 			<artifactId>spring-boot-starter-security</artifactId> -->
<!-- 		</dependency> -->

		<!-- Starter for testing Spring Boot applications with libraries including 
			JUnit, Hamcrest and Mockito -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Spring Security Test -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.springframework.security</groupId> -->
<!-- 			<artifactId>spring-security-test</artifactId> -->
<!-- 			<scope>test</scope> -->
<!-- 		</dependency> -->

		<!-- Spring Boot Developer Tools -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Database -->
		<dependency>
			<groupId>sqljdbc42</groupId>
			<artifactId>sqljdbc42</artifactId>
			<version>4.2</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/src/main/webapp/WEB-INF/lib/sqljdbc42.jar</systemPath>
		</dependency>

		<!-- DataSource -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
		</dependency>

		<!-- Gson: A Java serialization/deserialization library to convert Java 
			Objects into JSON and back -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>

		<!-- Database Logging -->
		<dependency>
			<groupId>p6spy</groupId>
			<artifactId>p6spy</artifactId>
			<version>${p6spy.version}</version>
		</dependency>
		
		<!-- Springfox Swagger2: JSON API documentation for spring based applications -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${swagger.version}</version>
		</dependency>
		
		<!-- Used to work with the older excel file format - `.xls` -->
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
		</dependency>

		<!-- Used to work with the newer excel file format - `.xlsx` -->
		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>

	</dependencies>

	<build>

		<!-- This is the name of the bundled project when it is finally built. -->
		<finalName>${project.name}</finalName>

		<!-- List of resource elements that each describe what and where to include 
			files associated with this project. -->
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>

			<!-- Allowing to package executable jar or war archives and run an application 
				"in-place" -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!-- repackaged for executable jar/war -->
				<configuration>
					<mainClass>${start-class}</mainClass>
					<classifier>exec</classifier>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

</project>
